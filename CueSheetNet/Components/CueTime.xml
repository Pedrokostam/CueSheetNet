<?xml version="1.0" encoding="utf-8" ?>
<Elements>
	<Errors>
		<Error name="FrameOverflow">
			<exception cref="OverflowException">
				When resulting frames are greater than <see cref="int.MaxValue"/> or lower than <see cref="int.MinValue"/>
			</exception>
		</Error>
		<Error name="InfiniteNanArgument">
			<exception cref="ArgumentException"/>
		</Error>
		<Error name="DivideByZero">
			<exception cref="DivideByZeroException">
				<paramref name="divisor"/> is zero.
			</exception>
		</Error>
	</Errors>
	<Snippets name="MustBeFiniteAndNotNan">
		<Snippet name="AllSameSign">
			All parameters must be of the same sign: either all non-negative, or all non-positive. Otherwise <see cref="System.ArgumentException"/> is thrown.
		</Snippet>
		<Snippet name="FrameClarification">
			A timecode frame is one CD sector and corresponds to 1/75 of a second of audio. It should not be confused with channel data frame, which is just a part of a CD sector.
		</Snippet>
		<Snippet name="FactorMultiplier">
			The factor by which the number of frames of CueTime will be multiplied.
		</Snippet>
		<Snippet name="MustBeFiniteAndNotNan">
			<para>
				Must be a finite number - NaN and ±infinity will result in <see cref="ArgumentException"/>.
			</para>
		</Snippet>
		<Snippet name="CheckedOperation">
			<para>
				This operation is checked - overflowing will result in <see cref="OverflowException"/>.
			</para>
		</Snippet>
		<Snippet name="FrameRoundedToZero">
			<br>
				Resulting <see cref="TotalFrames">TotalFrames</see> will be rounded down, towards zero.
			</br>
		</Snippet>
		<Snippet name="FormatGuide">
			Format string can utilize the following terms:
			<list type="table">
				<item>
					<term>'G' or 'g'</term>
					<description>
						Default representation. Equivalent of calling <see cref="CueTime.ToString()">ToString()</see> with no parameters. Cannot be mixed with others.
					</description>
				</item>
				<item>
					<term>'M' or 'm'</term>
					<description>The minutes part. Text will be padded to the however many time the term was repeated.</description>
				</item>
				<item>
					<term>'S' or 's'</term>
					<description>The seconds part. Text will be padded to the however many time the term was repeated.</description>
				</item>
				<item>
					<term>'F' or 'f'</term>
					<description>The frames part. Text will be padded to the however many time the term was repeated.</description>
				</item>
				<item>
					<term>'D' or 'd'</term>
					<description>The milliseconds part. Text will be padded to the however many time the term was repeated.</description>
				</item>
				<item>
					<term>'-'</term>
					<description>If specified and the time is negative, add the minus sign at the beginning.</description>
				</item>
				<item>
					<term>'+'</term>
					<description>Always adds the sign at the beginning.</description>
				</item>
				<item>
					<term>'\'</term>
					<description>Escapes the next character, while discarding this backslash.</description>
				</item>
				<item>
					<term>any other character</term>
					<description>Is copied to the output string without changes.</description>
				</item>
			</list>
		</Snippet>
	</Snippets>
	<Members>
		<Member name="TotalFrames">
			<summary>
				Total number of timecode frames that represent the value of the current CueTime structure.
				<para>
					<include file='CueTime.xml' path='Elements/Snippets/Snippet[@name="FrameClarification"]'/>
				</para>
			</summary>
		</Member>
		<Member name="Frames">
			<summary>
				Gets the timecode frames component of the time interval represented by the current CueTime structure (0-74).
				<para>
					<include file='CueTime.xml' path='Elements/Snippets/Snippet[@name="FrameClarification"]'/>
				</para>
			</summary>
		</Member>
		<Member name="CueTimeClass">
			<summary>
				Represents a time interval measured in Red Book timecode frames.
				<para>
					The structure also provides methods and properties to convert the timecode frame into other units of time, as well as <see cref="System.TimeSpan">TimeSpan</see>.
				</para>
				<para>
					<include file='CueTime.xml' path='Elements/Snippets/Snippet[@name="FrameClarification"]'/>
				</para>
			</summary>
		</Member>
		<Member name="CueTimeCtorFrames">
			<summary>
				Creates new instance of <see cref="CueTime">CueTime</see> from the given number of timecode frames.
			</summary>
			<param name="totalFrames">
				Represents a time interval measured in Red Book timecode frames.
				<para>
					The structure also provides methods and properties to convert the timecode frame into other units of time, as well as <see cref="System.TimeSpan">TimeSpan</see>.
				</para>
				<para>
					<include file='CueTime.xml' path='Elements/Snippets/Snippet[@name="FrameClarification"]'/>
				</para>
			</param>
		</Member>
		<Member name="CalculateTotalFrames">
			<summary>
				Calculates total frames from the specified components.
				<include file='CueTime.xml' path='Elements/Snippets/Snippet[@name="CheckedOperation"]'/>
			</summary>
			<param name="minutes">
				Number of minutes. May exceed 59.
			</param>
			<param name="seconds">
				Number of seconds. May exceed 59.
			</param>
			<param name="frames">
				Number of timecode frames. May exceed 74.
				<para>
					<include file='CueTime.xml' path='Elements/Snippets/Snippet[@name="FrameClarification"]'/>
				</para>
			</param>
			<returns>
				Total number of frames.
			</returns>
			<include file='CueTime.xml' path='Elements/Errors/Error[@name="FrameOverflow"]'/>
		</Member>
		<Member name="CueTimeCtorMinSecFrames">
			<summary>
				<include file='CueTime.xml' path='Elements/Members/Member[@name="CalculateTotalFrames"]/summary'/>
				<para>
					<include file='CueTime.xml' path='Elements/Snippets/Snippet[@name="AllSameSign"]'/>
				</para>
			</summary>
			<returns/>
			<exception cref='System.ArgumentException'/>
			<include file='CueTime.xml' path='Elements/Members/Member[@name="CalculateTotalFrames"]'/>
		</Member>
		<Member name="MultiplyInt">
			<summary>
				Multiplies the time by a factor.
				<include file='CueTime.xml' path='Elements/Snippets/Snippet[@name="CheckedOperation"]'/>
			</summary>
			<param name="factor">
				<include file='CueTime.xml' path='Elements/Snippets/Snippet[@name="FactorMultiplier"]'/>
			</param>
			<returns>
				CueTime equivalent to the number frames of input CueTime multiplied by the <paramref name="factor"/>.
			</returns>
			<include file='CueTime.xml' path='Elements/Errors/Error[@name="FrameOverflow"]'/>
		</Member>
		<Member name="MultiplyDouble">
			<param name="factor">
				<include file='CueTime.xml' path='Elements/Snippets/Snippet[@name="FactorMultiplier"]'/>
				<include file='CueTime.xml' path='Elements/Snippets/Snippet[@name="MustBeFiniteAndNotNan"]'/>
			</param>
			<returns>
				<include file='CueTime.xml' path='Elements/Members/Member[@name="MultiplyInt"]/returns'/>
				<include file='CueTime.xml' path='Elements/Snippets/Snippet[@name="FrameRoundedToZero"]'/>
			</returns>
			<include file='CueTime.xml' path='Elements/Errors/Error[@name="InfiniteNanArgument"]'/>
			<include file='CueTime.xml' path='Elements/Members/Member[@name="MultiplyInt"]'/>
		</Member>
		<Member name="MultiplyOperatorDouble">
			<param name="time">
			</param>
			<include file='CueTime.xml' path='Elements/Members/Member[@name="MultiplyDouble"]'/>
		</Member>
		<Member name="ToStringFormatFormatProvider">
			<summary>
				Converts the time to a text representation according to the given format.
			</summary>
			<remarks>
				<include file='CueTime.xml' path='Elements/Snippets/Snippet[@name="FormatGuide"]'/>
			</remarks>
			<param name="format">
				A case-insensitive cue time format string.
				<para/>
				<include file='CueTime.xml' path='Elements/Snippets/Snippet[@name="FormatGuide"]'/>
			</param>
			<param name="formatProvider">An object that supplies culture-specific formatting information.
		</param>
			<returns>
				The text representation created according to <paramref name="format"/>
			</returns>
		</Member>
		<Member name="ToString">
			<summary>
				Returns text representation of this instance.
			</summary>
			<remarks>
				The representation will match the format by CUE sheets files. It is functionally the same as calling <see cref="ToString(string?)">ToString("-mm:ss:ff")</see>.
			</remarks>
			<returns>The text representation created according to the following format: "-mm:ss:ff"</returns>
		</Member>
	</Members>
</Elements>
